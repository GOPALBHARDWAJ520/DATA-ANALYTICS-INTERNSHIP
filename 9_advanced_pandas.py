# -*- coding: utf-8 -*-
"""9. Advanced Pandas.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1ZCrtthybBUUzdnzRU_LBlrQajgynerQQ

# Pandas Creating & Reading CSV files
"""

import pandas as pd

data = pd.DataFrame({
    'Name' : ['Ankit', 'Aishwarya', 'Sanket', 'Shivangi', 'Saiprasad', 'Rishika', 'Pratiksha'],
    'Age' : [23, 21, 22, 21, 22, 21, 20],
    'University' : ['BHU', 'JNU', 'DU', 'BHU', 'SPPU', 'SPPU', 'DU'],
})

data

# data.to_csv('students.csv')
data.to_csv('students.csv', index = False)





"""# Uploading Datasets"""

students = pd.read_csv('/content/students.csv')

students

"""# Groupby Function"""

emp = pd.read_csv('/content/Employees.csv')

emp

grouped = emp.groupby('Department')

tech = grouped.get_group('Technical')
market = grouped.get_group('Marketing')
admin = grouped.get_group('Administration')

market
# market['Salary'].mean()

market['Years of Experience'].mean()

admin





"""# Top Commands

Creating New, Renaming & Droping Columns.

Apply Method, Sort Index, Sort Values.
"""

data

"""**Creating New Columns**"""

# Creating New Columns

data['City'] = ['Delhi', 'Bangalore', 'Chennai', 'Patna', 'Pune', 'Pune', 'Mumbai']

data

"""**Renaming Columns**"""

data.columns = ['First Name','Current Age','College University','Location']

data

"""**Droping Columns**"""

data.drop(['Current Age'], axis = 1)           # Temporary Droping Syntax

data

data.drop(['Current Age'], axis = 1, inplace = True)           # Permanent Droping Syntax

data

data

"""**Apply Method**"""

# Creating Marks Column

data['Marks'] = [201, 210, 195, 183, 225, 203, 190]

data

# Apply Method

data['Marks'] = data['Marks'].apply(lambda x: x/5)

data

# Renaming Column

data.columns = ['First Name','College University','Location', 'Marks/Subject']

data



"""**Sort Index**"""

data.index = [10,28,64,7,1,6,15]          # Assigning Index

data

data.sort_index(ascending = True)                      # Default Statement : Ascending = True

data.sort_index(ascending = False)



"""**Sort Values**"""

data.sort_values(by = 'Marks/Subject', ascending = False)

