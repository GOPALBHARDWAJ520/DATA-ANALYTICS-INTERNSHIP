# -*- coding: utf-8 -*-
"""Python Data Structure Assignment Day 5.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1HQXnGJ2w14cD9P2DayOz_4MYlaisa35g

<a id='1'></a><center> <h3 style="background-color:orange; color:white" ><br>Python Data Structures<br></h3>

# `Types of Data Structures:`
* `List` | `Tuple`
* `Set` | `Dictionary`

|Data Structures type|Mutable|Comments|Indexing|Ordered|Duplicacy|
|----|----|----|----|----|----|
tuple ()|immutable|immutable version of list| possible|yes |allowed |
list []|mutable|-|possible |yes | allowed |
set {}|mutable| -|not |no |not |
dict {key:value}|mutable|-|possible |no |not  |

💫 `immutable` => `can't be changed` <br>
💫 `mutable` => `can be changed`
"""



"""## Lists

### Create an empty list with the name ‘a’, print the value of a and type(a).
"""

# create empty list, name it 'a'
a = []

# print the value of a

print(a)

# print the type of a
type(a)

"""### Create a list , languages = ['R','Python', 'SAS', 'Scala', 42],"""

languages = ['R','Python', 'SAS', 'Scala', 42]

"""Print the number of elements in the list"""

languages = ['R','Python', 'SAS', 'Scala', 42]
print(len(languages))

"""Using for loop iterate and print all the elements in the list"""

print(languages)

"""Select the second item, 'Python' and store it in a new variable named 'temp'"""

temp = languages[1]

"""Print the value of temp and type(temp)"""

type(temp)

"""# Append the element 'Java' in the list"""

languages.append('Java')
print(languages)

"""Remove the element 42 from the list and print the list"""

languages.remove(42)
print(languages)

"""### Create a list, colors = [‘Red’, ‘Blue’, ‘White’]"""

colors = ['Red','Blue', 'White']

"""Append the element 'Black' to colors"""

colors.append('Black')
print(colors)

"""Append the color 'Orange' to second position (index=1) and print the list"""

colors.insert(1,'Orange')
print(colors)

"""Print the list

"""

print(colors)

"""Create another list, colors2 = [‘Grey’, ‘Sky Blue’]"""

colors2 = ['Grey', 'Sky Blue']

"""Add the elements of colors2 to colors using extend function in the list"""

colors.extend(colors2)
print(colors)

"""Print len of colors and its elements"""

colors = ['Red', 'Orange', 'Blue', 'White', 'Black', 'Grey', 'Sky Blue']
print(len(colors))
print(colors)

"""Sort the list and print it."""

colors.sort()
print(colors)

"""### Create a string, sent = ‘Coronavirus Caused Lockdowns Around The World.”"""

sent = "Coronavirus Caused Lockdowns Around The World.”

"""Use split function to convert the string into a list of words and save it in variable words and print the same"""

sent = "Coronavirus Caused Lockdowns Around The World."
words = sent.split()
print(words)

"""Convert each word in the list to lower case and store it in variable words_lower.
Print words_lower
"""

sent = "Coronavirus Caused Lockdowns Around The World."
words = sent.split()
words_lower = [word.lower() for word in words]
print(words_lower)

"""Check whether ‘country’ is in the list





"""

sent.find('country')

"""Remove the element ‘the’ from the list and print the list."""

sent.replace('the','')
print(sent)

"""## Select the first 4 words from the list words_lower using slicing and store them in a new variable x4"""

x4 = words_lower[0:4]
x4

# print x4

print(x4)

"""Convert the list of elements to single string using join function and print it"""

joined_string = ' '.join(x4)
print(joined_string)

"""## Sets

### Create stud_grades = ['A','A','B','C','C','F']
"""

stud_grades = ['A','A','B','C','C','F']

"""Print the len of stud_grades"""

stud_grades = ['A','A','B','C','C','F']
print(len(stud_grades))

"""Create a new variable, stud_grades_set = set(stud_grades)"""

stud_grades_set = set(stud_grades)

"""Print stud_grades_set."""

stud_grades_set = set(stud_grades)
print(stud_grades_set)

"""print the type of stud_grades and stud_grades_set and print their corresponding elements. Try to understand the difference between them."""

stud_grades_set = set(stud_grades)
print(stud_grades_set)

"""Add a new element ‘G’ to stud_grades_set"""

g = stud_grades_set.add('G')
print(stud_grades_set)

"""Add element 'F' to stud_grades_set. and print it."""

f = stud_grades_set.add('F')
print(stud_grades_set)

"""!!Did you notice? set doesn't add an element if it's already present in it, unlike lists.

Remove ‘F’ from stud_grades_set
"""

f = stud_grades_set.remove('F')
print(stud_grades_set)

"""Print the elements and the length of stud_grades_set"""

len(stud_grades_set)

"""### Create colors = [‘red’,’blue’,’orange’], and fruits = [‘orange’,’grapes’,’apples’]"""

colors = ['red','blue','orange']
fruits = ['orange','grapes','apples']

"""Print color and fruits"""

colors = ['red','blue','orange']
fruits = ['orange','grapes','apples']
print(colors)
print(fruits)

"""Create colors_set, and fruits_set. (using set() ) and print them"""

colors_set = set(colors)
fruits_set = set(fruits)
print(colors_set)
print(fruits_set)

"""Find the union of both the sets."""

union_set = colors_set.union(fruits_set)
print(union_set)

"""Find the intersection of both the sets"""

i8ntersection_set = colors_set.intersection(fruits_set)
print(intersection_set)

"""Find the elements which are Fruits but not colors (using set.difference() )"""

set_difference = fruits_set.difference(colors_set)
print(set_difference)



"""## TUPLES

### Create temp = [17, ’Virat’, 50.0]
"""

temp = [17, 'Virat', 50.0]

"""Iterate through temp and print all the items in temp"""

temp = [17, 'Virat', 50.0]
for item in temp:
    print(item)

"""replace first element with 11 in temp"""

temp[0] = 11
print(temp)

"""Set temp1 = tuple(temp)"""

temp1 = tuple(temp)
print(temp1)

"""Iterate through temp1 and print all the items in temp1."""

temp1 = tuple(temp)
for item in temp1:
    print(item)

"""replace first element with 17 in temp1"""

temp1[0] = 17
print(temp1)

"""<b>Oops!! You got an error. Hey Don't worry! Its because Once a tuple is created, you cannot change its values unlike list.</b>

### Create city = ("Bangalore", 28.9949521, 72)
"""

city = ("Bangalore", 28.9949521, 72)

"""Print first element of city"""

city = ("Bangalore", 28.9949521, 72)
print(city[0])

"""Create city2 = (‘Chennai’, 30.01, 74)"""

city2 = ('Chennai', 30.01, 74)

"""Create cities which consist of city and city2"""

cities = (city, city2)

"""Print cities"""

cities = (city, city2)
print(cities)

"""Print type of first element in cities"""

cities = (city, city2)
print(type(cities[0]))

"""print the type of cities

"""

c = cities
print(type(c))

"""Hey that implies you made a nested tuples!!

## DICTIONARY

### Create a dictionary d = {"actor":"amir","animal":"cat","earth":2,"list":[23,32,12]}
"""

d = {"actor":"amir","animal":"cat","earth":2,"list":[23,32,12]}

"""Print the value of d[0]"""

d = {"actor":"amir","animal":"cat","earth":2,"list":[23,32,12]}
print(d[0])

"""<b>Oops!! again an error. again a fun fact. Dictionary return the value for key if key is in the dictionary, else throws KeyError
and we don't have key 0 here :( </b>

Store the value of d[‘actor’] to a new variable actor.
"""

d = {"actor":"amir","animal":"cat","earth":2,"list":[23,32,12]}
actor = d['actor']
print(actor)

"""Print the type of actor"""

actor = d['actor']
print(type(actor))

"""Store the value of d[‘list’] in new variable List."""

d = {"actor":"amir","animal":"cat","earth":2,"list":[23,32,12]}
List = d['list']
print(List)

"""Print the type of List."""

l = List
print(type(l))

"""Create d1 = { ‘singer’ : ‘Kr$na’ , ‘album’: ‘Still here’, ‘genre’ : ‘hip-hop’}"""

d1 = { 'singer' : 'Kr$na' , 'album': 'Still here', 'genre' : 'hip-hop'}

"""Merge d1 into d."""

merged_dict = {**d, **d1}
print(merged_dict)

"""print d"""

print(merged_dict)

"""Print all the keys in d"""

print(merged_dict.keys())

"""Print all the values in d"""

print(merged_dict.values())

"""Iterate over d, and print each key, value pair as this - (actor ----> amir)"""

for key, value in d.items():
  print(f"{key} ----> {value}")

"""count the number of occurences of charachters in string named "sent" using dictionary and print the same.

"""

char_count = {}
for char in sent:
    if char in char_count:
        char_count[char] += 1
    else:
        char_count[char] = 1
print(char_count)

