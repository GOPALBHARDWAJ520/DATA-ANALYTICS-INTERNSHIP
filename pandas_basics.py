# -*- coding: utf-8 -*-
"""Pandas Basics.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/13KDqTeFFcxf3VxBZbAo-USKcULrDoKJr

# Pandas Series
A Pandas Series is like a column in a table.

It is a one-dimensional array holding data of any type.
"""

import pandas as pd

# Series Method

series = pd.Series([1, 7, 2, 8, 5])

print(series)

# Series Method with Index

series = pd.Series([1, 7, 2, 8, 5], index = ["a", "b", "c","d","e"])

print(series)

# Accessing Series elements

print(series[2])
print(series["c"])







"""# Pandas DataFrame

A Data frame is a two-dimensional data structure, i.e., data is aligned in a tabular fashion in rows and columns.
"""

# DataFrame Method on list

data = pd.DataFrame([1,2,3,4,5])
print(data)

# DataFrame using Dictionary

data = pd.DataFrame({'Name':['Tom', 'Jack', 'Steve', 'Ricky','Sam','Will','Root'],
                     'Age':[28,34,29,42,17,17,45]})
data.head(10)

# data.head(5)





# DataFrame with Index

data = pd.DataFrame({'Name':['Tom', 'Jack', 'Steve', 'Ricky','Sam','Will','Root'],
                     'Age':[28,34,29,42,17,17,45]}, index=['C1','C2','C3','C4','C5','C6','C7'])
data.head(10)

# Column Selection

# data['Name']
data['Age']

data.head(10)

# Row Selection

# data.loc['C4','Age']
data.iloc[3,0]







"""# Pandas Concatenation

It is used to concatenate pandas objects along a particular axis with optional set logic along the other axes.
"""

names = pd.DataFrame({'Name':['Tom', 'Jack', 'Steve', 'Ricky','Sam','Will','Root']})
ages = pd.DataFrame({'Age':[28,34,29,42,17,17,45]})

names2 = pd.DataFrame({'Name':['Joe', 'Pope', 'Buttler', 'Ben','James','Cook']})

names2

ages

pd.concat([names, ages], axis = 1)                     # Concatenation

pd.concat([names, names2])                # Concatenation





"""# Pandas Indexing

loc() , iloc(), Filtering methods
"""

data

# data['Name']
data[['Name','Age']]

data[data['Age'] <= 18][['Name']]

data[data['Age'] <= 18][['Name']]

data[data['Age'] > 40]

data

print(data.loc['C2','Name'])
print(data.iloc[1,0])

